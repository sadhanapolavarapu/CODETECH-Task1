# -*- coding: utf-8 -*-
"""Data_preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1t6a-U7aBtRkc_zZjRql8mCsBqq_yfSiz
"""

pip install numpy

pip install pandas numpy matplotlib seaborn

import pandas as pd

data = pd.read_csv("/content/Used Car Dataset.csv")
print(data)

print("displaying 1st rows of the dataset")
data.head()

print("Tail records")
data.tail()

#Sanity check of the data
data.shape

#information getting from the data
data.info()

print("finding missing values")
data.isnull().sum()

print("Getting percentage of missing values")
data.isnull().sum()/data.shape[0]**100

print("finding duplicates")
data.duplicated().sum()

print("identifying garbage values")
for i in data.select_dtypes(include = "object").columns:
  print(data[i].value_counts())
  print("***"*10)

"""EXPLORATORY DATA ANALYSIS"""

#descriptive statistics
data.describe().T

data.describe(include="object")

import seaborn as sns
import matplotlib.pyplot as plt

#histogram to understand the distribution
for i in data.select_dtypes(include="number").columns:
  sns.histplot(data=data,x=i)
  plt.show()

#Boxplot to identify the outliers
import seaborn as sns
import matplotlib.pyplot as plt
for i in data.select_dtypes(include="number").columns:
  sns.boxplot(data=data,x=i)
  plt.show()

for i in ['seats', 'kms_driven', 'mileage(kmpl)', 'engine(cc)',
       'max_power(bhp)', 'torque(Nm)', 'price(in lakhs)']:
       sns.scatterplot(data=data,x=i,y='kms_driven')
       plt.show()

#scatter plots for relation
data.select_dtypes(include="number").columns

s=data.select_dtypes(include="number").corr() #shows correlation

plt.figure(figsize=(5,5))
sns.heatmap(s,annot=True)

"""MISSING VALUE TREATMENTS

"""

for i in ["mileage(kmpl)","engine(cc)","torque(Nm)","max_power(bhp)"]:
  data[i].fillna(data[i].median(),inplace=True)



#choose the method of imputing missing values
#like mean, median, mode
data.isnull().sum()

"""DUPLICATE AND GARBAGE VALUE TREATMENTS

"""

data.drop_duplicates()

"""ENCODING OF THE DATA

"""

dummy = pd.get_dummies(data=data,columns=["insurance_validity","fuel_type","ownsership","transmission"],drop_first=True)

dummy

















